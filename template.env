# The host URL for this application
HOST="http://localhost"
PORT="5001"

# Generate an AES key and initialisation vector to encrypt your client metadata
# For example, using: `openssl enc -aes-256-cbc -k secret -P -md sha1`
AES_KEY=""
AES_IV=""

# For variables ending in `_CERT` and `_KEY`, use PEM-formatted certificates
# and keys. Variables ending in `_PASS` represent optional passwords used to
# encrypt/decrypt your generated private keys.

# The transport certificates used to secure your client's mTLS connection
# to the server
OB_TRANSPORT_CERT=""
OB_TRANSPORT_KEY=""
OB_TRANSPORT_PASS=""
OB_SIGNING_CERT=""
OB_SIGNING_KEY=""
OB_SIGNING_PASS=""

# The `kid` used to identify the keys in your JWKS.
# For OBIE certificates, this value is set by the Open Banking UK
# certificate authority.
OB_SIGNING_KEY_ID=""

# Any choice of compatible algorithm, typically one of ES256 and PS256.
OB_SIGNING_ALGORITHM=""

# PEM-formatted x509 certificates from the certificate authority chain
OB_ROOT_CA=""
OB_ISSUING_CA=""

# JWT-format software statement assertion issued by the Open Banking UK
# certificate authority
OB_SSA_JWT=""

# If an API provider uses self-signed certificates in their certificate chain
# uncomment the below two variables (NON-PRODUCTION environments only!)
# OB_REJECT_UNAUTHORIZED=false
# NODE_TLS_REJECT_UNAUTHORIZED=0

# This was inserted by `prisma init`:
# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings

# Example PostgreSQL
# DATABASE_URL="postgresql://user:pass@localhost:5432/openid-clients?schema=public"
DATABASE_URL="file:./clients.db"